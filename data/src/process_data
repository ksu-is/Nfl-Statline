import pandas as pd

def process_statlines(df):
    """
    Process the raw player data and aggregate season statistics.

    Args:
        df (pd.DataFrame): Raw data frame with NFL player stats.

    Returns:
        pd.DataFrame: Aggregated stats by player.
    """
    if df is None or df.empty:
        print("DataFrame is empty. Skipping processing.")
        return pd.DataFrame()

    if 'player_name' not in df.columns:
        print("Column 'player_name' not found. Please check the data source.")
        print("Available columns:", df.columns.tolist())
        return pd.DataFrame()

    df = df[df['player_name'].notna()]

    # Define the statistical columns to include
    stat_columns = [
        'passing_yards', 'rushing_yards', 'receiving_yards',
        'pass_attempt', 'rush_attempt', 'reception',
        'passing_tds', 'rushing_tds', 'receiving_tds'
    ]

    # Filter available statistics
    available_stats = [col for col in stat_columns if col in df.columns]

    # Select relevant columns
    columns_to_keep = ['player_name', 'recent_team', 'position'] + available_stats
    df = df[columns_to_keep]

    # Fill missing values with zeros
    df[available_stats] = df[available_stats].fillna(0)

    # Aggregate statistics by player
    statlines = df.groupby(['player_name', 'recent_team', 'position'])[available_stats].sum().reset_index()

    return statlines
